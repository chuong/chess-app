<html>

  <head>
    <meta charset="UTF-8">
  </head>

  <body>
    <div class="col-xs-10 col-xs-offset-1">
      <div class="left">
        <% for j in 1..8 %>
          <% row = 9-j %>
          <%= content_tag(:div, row.to_s, class: 'row')%>
        <% end %>
      </div>

      <div class="chessboard">
        <% pieces = @game.pieces %>
        <% for j in 1..8 %>
          <% row = 9-j %>
          <% for col in 1..8 %>
            <% pieces_in_square = pieces.where(column: col, row: row) %>
            <% piece_in_square = pieces_in_square[0] %>

            <% if piece_in_square.blank? %>
              <%= content_tag(:div, '', class: square_color(row, col)) %>
            <% else %>
              <%= content_tag(:div,
                              content_tag(:div, raw(select_html_symbol(piece_in_square)),
                              piece_color: piece_color(piece_in_square)),
                              class: square_color(row, col)) %>
            <% end %>
          <% end %>
        <% end %>
      </div>

      <div class="bottom">
        <% for col in 'a'..'h' %>
          <%= content_tag(:div, col, class: 'col')%>
        <% end %>
      </div>
    </div>
  </body>
</html>

<script>
$(function() {
  // set layer position of pieces and hovering cursor shape
  $('.chessboard>div>div').css({zIndex: 1, cursor: 'move'});

  // make all pieces draggable
  // the pieces are inside chessboard div and square div
  $('.chessboard>div>div').draggable();

  // handle the action of dropping a piece into a square
  $('.chessboard>div').droppable({
    // FIXME: This function does not check for valid move.
    //        It does not update database.
    drop: function(event, ui){
      let piece_div = ui.draggable;
      let square_div = $(this);

      // remove any piece of different color in the square
      if (square_div.text().length != 0 &&
          square_div.children().attr('piece_color') != piece_div.attr('piece_color')) {
        square_div.children().hide('slow');
        square_div.empty();
      }

      // reset the selected piece position relative to the square
      piece_div.css({left: 0, top: 0});

      // only add piece into square if empty
      if (square_div.text().length == 0) {
        square_div.append(piece_div);
      }
    }
  });

});
</script>
